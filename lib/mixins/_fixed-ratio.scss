
%_fixed-ratio {
  // Set position as relative to contain absolute child
  position: relative;

  display: block;
  // Make sure that child container can fill parent entirely

  padding: 0;

  list-style: none;

  &:before {
    display: block;

    content: '';
  }
}

%_ratio__item {
  @include absolute(top 0 left 0 bottom 0 right 0);
  @include vendor(box-sizing, border-box);

  z-index: 1;
}

$use-fixed-ratio: true!default;

@if $use-fixed-ratio == true {
  @if $use-positions == true {
    // ============================================================
    //
    //   $FIXED-RATIO
    //
    //   Used to generate empty ratio based containers
    //
    //   @param width         :  Value
    //   @param height        :  Value
    //   @param child         :  String
    //
    //   Used in markup:
    //
    //   <div class="className">
    //       <div class="square">
    //           <!-- content goes here -->
    //       </div>
    //   </div>
    //
    //   Used in sass:
    //
    //   .className {
    //       @include fixed-ratio(1, 1, square)
    //   }
    //
    // =============================================================


    @mixin fixed-ratio($width, $height, $child: 'ratio__item') {
      // Get percentage based off of width and height variables
      $percentage : ($height/$width * 100%);

      @extend %_fixed-ratio;


      // Use pseudo element to inflate container to ratio size
      &:before {
        padding-top: $percentage;
      }

      @if $child == 'ratio__item' {
      } @else {
        // Set child to fill all of parent element
        .#{$child} {
          @extend %_ratio__item;
        }
      }
    }
  } @else {
    @warn '@fixed-ratio depends on @positions'
  }
}
